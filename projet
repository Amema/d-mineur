from __future__ import division
import tkinter
import sys
import math
import random
import time

random.seed()

class MFG(tkinter.Tk):

    def __init__(self,couleurDeFond="green",largeur=80,hauteur=50, parent = None):
        tkinter.Tk.__init__(self, parent)
        self.monCanvas = tkinter.Canvas(self, width = largeur, height = hauteur, background = "green")
        self.monCanvas.grid(row=1,column=1)
        self.monCanvas = tkinter.Canvas(self, width = largeur, height = hauteur, background = "orange")
        self.monCanvas.grid(row=1,column=2)
        self.monCanvas = tkinter.Canvas(self, width = largeur, height = hauteur, background = "red")
        self.monCanvas.grid(row=1,column=3)
#        g=MFG.geometry(self)
#        MFG.geometry("500x500")
#        r=[i for i in range(0,len(g)) if not g[i].isdigit()]
#        l,h,x,y=[int(g[0:r[0]]),int(g[r[0]+1:r[1]]),int(g[r[1]+1:r[2]]),int(g[r[2]+1:])]
#        MFG.geometry("%dx%d%+d%+d" % (l,h,(MFG.winfo_screenwidth(self)-l)//2,(MFG.winfo_screenheight(self)-h)//2))
#        MFG.update_idletasks(self)
        self.choix = tkinter.Label(self,text="choix de difficulté",fg="white",bg="black",font=("Helvetica", 16))
        self.choix.grid(row=0,column=2)
        self.un=tkinter.Button(self,text=" 1 ", command=lambda : self.difficulte(1))
        self.deux=tkinter.Button(self,text=" 2 ", command=lambda : self.difficulte(2))
        self.trois=tkinter.Button(self,text=" 3 ", command=lambda : self.difficulte(3))
        self.un.grid(row=1,column=1)
        self.deux.grid(row=1,column=2)
        self.trois.grid(row=1,column=3)
        self.mainloop()

    def difficulte(self,x):
        h=MFG.winfo_screenheight(self)
        l=MFG.winfo_screenwidth(self)
        for c in MFG.winfo_children(self):
            c.destroy()
        self.w = tkinter.Canvas(self, width=l, height=h,background='grey')
        self.w.pack()
        tab=self.genererTableau(x)
        print(tab)
        sys.stdout.flush()

    def genererTableau(x):
        l=[]
        if x==1:
            tab=[[]]*8
            for i in range(8):
                tab[i]=[0]*8
            for i in range(10):
                x=random.randint(0,len(l[0])-1)
                y=random.randint(0,len(l)-1)
                tab[y][x]=[True]
                l=potentielBombe(tab,y,x)
            return tab
        if x==2:
            tab=[[]]*16
            for i in range(16):
                tab[i]=[0]*16
            for i in range(40):
                x=random.randint(0,len(l[0])-1)
                y=random.randint(0,len(l)-1)
                tab[y][x]=[True]
                l=potentielBombe(tab,y,x)
            return tab
        if x==3:
            tab=[[]]*23
            for i in range(23):
                tab[i]=[0]*23
            for i in range(100):
                x=random.randint(0,len(l[0])-1)
                y=random.randint(0,len(l)-1)
                tab[y][x]=[True]
                l=potentielBombe(tab,y,x)
            return tab

    def potentielBombe(l,y,x):
        ly=l[y]
        lt=[]
        if y<=len(l)-2:
            l[y][x]+=1
            if x!=0:
                l[y][x-1]+=1
                l[y+1][x-1]+=1
            if x<=len(ly)-2:
                l[y][x+1]+=1
                l[y+1][x+1]+=1
        if y!=0:
            l[y-1][x]+=1
            if x!=0:
                l[y-1][x-1]+=1
            if x<=len(ly)-2:
                l[y-1][x+1]+=1
        return l








#        self.monCanvas = tkinter.Canvas(self, width = 110, height = 30, background = "red")
#        self.monCanvas.grid(row=0,column=2)
# 10 par 8² : 64
# 40 par 256
# 99 pour 32x16 512 ou 30x16 : 512 480

MFG()
